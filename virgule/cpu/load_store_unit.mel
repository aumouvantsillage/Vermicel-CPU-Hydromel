#lang hydromel

# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at https://mozilla.org/MPL/2.0/.

import "common.mel"
import "decoder.mel"
import "opcodes.mel"

component load_store_unit
    port instr        : splice flip instruction
    port address      : in word_t
    port store_enable : in bit
    port store_data   : in word_t
    port load_data    : out word_t
    port rdata        : in word_t
    port wstrobe      : out wstrobe_t
    port wdata        : out word_t

    signal align = address[1 .. 0]

    wdata = case funct3 of
        funct3_lb_sb, funct3_lbu => {store_data[7 .. 0], store_data[7 .. 0], store_data[7 .. 0], store_data[7 .. 0]}
        funct3_lh_sh, funct3_lhu => {store_data[15 .. 0], store_data[15 .. 0]}
        _                        => store_data

    wstrobe = if store_enable then
            case funct3 of
                funct3_lb_sb, funct3_lbu => b'0001 << align
                funct3_lh_sh, funct3_lhu => b'0011 << align
                funct3_lw_sw             => b'1111
                _                        => b'0000
        else
            b'0000

    signal aligned_rdata = rdata >> (align * 8)

    load_data = case funct3 of
        funct3_lb_sb => aligned_rdata[7  .. 0] as integer
        funct3_lbu   => aligned_rdata[7  .. 0]
        funct3_lh_sh => aligned_rdata[15 .. 0] as integer
        funct3_lhu   => aligned_rdata[15 .. 0]
        _            => aligned_rdata

end
